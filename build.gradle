plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'dev.yehtun'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springGrpcVersion', "0.11.0")
	set('springModulithVersion', "1.4.1")
	set('mapstructVersion', "1.5.5.Final")
	set('jjwtVersion', "0.12.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.grpc:grpc-services'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.grpc:spring-grpc-server-web-spring-boot-starter'
	implementation 'org.springframework.modulith:spring-modulith-starter-core'
	implementation 'org.springframework.modulith:spring-modulith-starter-jpa'
	
	// Security & JWT
	implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
	implementation "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
	implementation "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"
	
	// Mapping
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	
	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	// Redis for session storage
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	
	// Email
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	
	// TOTP for 2FA
	implementation 'com.warrenstrange:googleauth:1.5.0'
	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.springframework.modulith:spring-modulith-actuator'
	runtimeOnly 'org.springframework.modulith:spring-modulith-observability'
	runtimeOnly 'com.mysql:mysql-connector-j'
	
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	
	// Development and Test Dependencies
	developmentOnly 'com.h2database:h2'  // H2 for development
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.grpc:spring-grpc-test'
	testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
		mavenBom "org.springframework.grpc:spring-grpc-dependencies:${springGrpcVersion}"
	}
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {
				option '@generated=omit'
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
